cmake_minimum_required(VERSION 2.8.12)
include(cmake/EnableCompilerFlag.cmake)
include(cmake/ParseVersion.cmake)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
project(kerberos-connector LANGUAGES C)
include(GNUInstallDirs)
EnableCompilerFlag(-std=c99)
EnableCompilerFlag(-Wall)
EnableCompilerFlag(-Werror=format-security)
EnableCompilerFlag(-Wp,-D_FORTIFY_SOURCE=2)
EnableCompilerFlag(-fstack-protector-strong)
EnableCompilerFlag(-g)
if(CMAKE_BUILD_TYPE MATCHES Debug)
	EnableCompilerFlag(-O)
else()
	EnableCompilerFlag(-O2)
endif()
add_library(kerberos-connector SHARED java_access.c kerberos.c)
add_definitions(-D_GNU_SOURCE)

set(JAVA_AWT_LIBRARY NotNeeded)
set(JAVA_AWT_INCLUDE_PATH NotNeeded)
find_package(JNI)
if(NOT JNI_FOUND)
	message(FATAL_ERROR "JNI not found")
endif()
find_package(KRB5 REQUIRED krb5 kadm-client)
if(NOT KRB5_FOUND)
	message(FATAL_ERROR "Kerberos 5 not found")
endif()

link_directories(${kerberos-connector_BINARY_DIR})
target_include_directories(kerberos-connector PRIVATE ${KRB5_INCLUDE_DIRS} ${JNI_INCLUDE_DIRS})
target_link_libraries(kerberos-connector ${KRB5_LIBRARIES} ${JAVA_JVM_LIBRARY})

set(TARGETS kerberos-connector)

set(TEST 0 CACHE BOOL "Create test tools")
set(COVERAGE 0 CACHE BOOL "Enable coverage testing compilfer flags")
set(PROJECT_VERSION "0.0.0-SNAPSHOT" CACHE STRING "Project version")

if(${TEST})
	add_executable(krbconn_test krbconn_test.c)
	add_library(kadm5_fake SHARED kadm5_fake.c)
	target_include_directories(kadm5_fake PRIVATE ${KRB5_INCLUDE_DIRS})
	target_link_libraries(krbconn_test kerberos-connector)
	list(APPEND TARGETS krbconn_test kadm5_fake)

endif()

if(${COVERAGE})
	if(NOT CMAKE_BUILD_TYPE MATCHES Debug)
		message(FATAL_ERROR "Coverage testing requires Debug build")
	endif()

	target_compile_options(kerberos-connector PRIVATE --coverage)
	target_link_libraries(kerberos-connector --coverage)
endif()

install(TARGETS ${TARGETS}
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION "lib/${PROJECT_NAME}")
install(FILES ../LICENSE ../README.md
	DESTINATION "${CMAKE_INSTALL_DOCDIR}")

set(CPACK_GENERATOR "DEB;RPM")
set(CPACK_PACKAGE_NAME "kerberos-connector")
parse_version("${PROJECT_VERSION}" CPACK_PACKAGE)
if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
	set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^i.86")
	set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "i386")
endif()
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "JNI library for MIT Kerberos administration")
set(CPACK_PACKAGE_DESCRIPTION "The kerberos-connector is Java Native Interface binary module using MIT Kerberos administration library (kadm5). It is used by Kerberos connector implementing ConnId API.")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}")
#set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/../LICENSE")
#set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/../README.md")
#set(CPACK_RESOURCE_FILE_WELCOME "${CMAKE_SOURCE_DIR}/../WELCOME")
set(CPACK_PACKAGE_CONTACT "Milan Ševčík <majlen@civ.zcu.cz>")
set(CPACK_SOURCE_GENERATOR "TGZ;TBZ2")
set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}")
set(CPACK_SOURCE_IGNORE_FILES "/build/")
#set(CPACK_STRIP_FILES "krbconn_test")
set(CPACK_DEBIAN_PACKAGE_SECTION "java")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://ipmil.civ.zcu.cz/midpoint/connector-kerberos")
set(CPACK_DEBIAN_COMPRESSION_TYPE "xz")
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
set(CPACK_RPM_PACKAGE_LICENSE MIT)
set(CPACK_RPM_PACKAGE_DESCRIPTION "${CPACK_PACKAGE_DESCRIPTION}")
set(CPACK_RPM_PACKAGE_URL "${CPACK_DEBIAN_PACKAGE_HOMEPAGE}")
include(CPack)
